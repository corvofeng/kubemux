{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"kubemux","text":"<p>kubemux \u662f\u4e00\u4e2a\u7528\u4e8e\u7ba1\u7406\u591a\u4e2a\u96c6\u7fa4\u7684 tmux \u5c01\u88c5\u5de5\u5177\uff0c\u5e76\u96c6\u6210\u4e86 tmuxinator \u7684\u529f\u80fd\u3002</p> <p>(A tmux wrapper for managing multiple clusters and incorporating tmuxinator.)</p>"},{"location":"#project-introduction","title":"\u9879\u76ee\u7b80\u4ecb (Project Introduction)","text":"<p>\u5728\u5f00\u53d1\u8fd9\u4e2a\u9879\u76ee\u65f6\uff0c\u6211\u5927\u91cf\u4f7f\u7528\u4e86 ChatGPT\uff0c\u4e3b\u8981\u7528\u4e8e\u7f16\u5199\u903b\u8f91\u548c\u5355\u5143\u6d4b\u8bd5\u3002\u539f\u672c\u9884\u8ba1\u9700\u8981 2-3 \u5929\u7684\u5de5\u4f5c\u91cf\u88ab\u7f29\u77ed\u5230 1 \u5929\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u975e\u5e38\u597d\uff0c\u91cd\u5199\u540e\u7684 kubemux \u6ca1\u6709\u4f9d\u8d56\uff0c\u5b89\u88c5\u975e\u5e38\u8f7b\u91cf\u3002</p> <p>(For this project, I heavily relied on ChatGPT, mainly for writing the logic and unit tests. Originally, I thought it would take 2-3 days of work, but the development cycle was shortened to 1 day. The final result is also very good. After rewriting, kubemux has no dependencies and is very lightweight to install.)</p> <p>\u9879\u76ee\u5df2\u5728 GitHub \u5f00\u6e90\uff0c\u5e76\u4e14\u4e0e tmuxinator \u7684\u914d\u7f6e\u517c\u5bb9\u3002\u5982\u679c\u60a8\u53d1\u73b0\u4efb\u4f55\u7f3a\u5931\u7684\u529f\u80fd\uff0c\u6b22\u8fce\u63d0\u51fa issue\u3002</p> <p>(The project is open source here, and it should be compatible with tmuxinator configurations. If you find any missing features, feel free to open an issue.)</p>"},{"location":"#source-code","title":"\u6e90\u4ee3\u7801 (Source Code)","text":"<p>https://github.com/corvofeng/kubemux</p>"},{"location":"#main-features","title":"\u4e3b\u8981\u529f\u80fd (Main Features)","text":"<ul> <li>\u591a\u96c6\u7fa4\u7ba1\u7406 (Multiple cluster management)</li> <li>tmuxinator \u914d\u7f6e\u517c\u5bb9 (tmuxinator configuration compatibility)</li> <li>\u8f7b\u91cf\u7ea7\u5b89\u88c5 (Lightweight installation)</li> <li>\u547d\u4ee4\u884c\u81ea\u52a8\u8865\u5168 (Command-line auto-completion)</li> <li>\u652f\u6301 zellij \u7ec8\u7aef\u590d\u7528\u5668 (Support for zellij terminal multiplexer)</li> </ul>"},{"location":"#documentation-navigation","title":"\u6587\u6863\u5bfc\u822a (Documentation Navigation)","text":"\u82f1\u6587\u6587\u6863 (English Documents) \u4e2d\u6587\u6587\u6863 (Chinese Documents) Introduction \u7b80\u4ecb Why \u539f\u56e0 Example \u793a\u4f8b Usage \u4f7f\u7528\u8bf4\u660e Usage - Tmuxinator \u4f7f\u7528\u8bf4\u660e - Tmuxinator Usage - Kubeconfig \u4f7f\u7528\u8bf4\u660e - Kubeconfig Usage - Zellij \u4f7f\u7528\u8bf4\u660e - Zellij"},{"location":"#quick-start","title":"\u5feb\u901f\u5f00\u59cb (Quick Start)","text":"<pre><code># MacOS \u5b89\u88c5 (MacOS Installation)\nbrew install corvofeng/tap/kubemux\n\n# Linux \u5b89\u88c5 (Linux Installation)\nbin install https://github.com/corvofeng/kubemux ~/usr/bin\n\n# \u542f\u7528\u547d\u4ee4\u8865\u5168 (Enable Command Completion)\nsource &lt;(kubemux completion bash)  # Bash\nsource &lt;(kubemux completion zsh)   # Zsh\n</code></pre>"},{"location":"#contributing","title":"\u8d21\u732e (Contributing)","text":"<p>\u6b22\u8fce\u63d0\u4ea4 Pull Requests \u548c Issues\uff01</p> <p>(Pull Requests and Issues are welcome!)</p>"},{"location":"en/example/","title":"Best Practice","text":""},{"location":"en/example/#kube-ps1","title":"kube-ps1","text":"<p>If you want to use kubectl with zsh, I recommend to use <code>kube-ps1</code></p> <p>https://github.com/jonmosco/kube-ps1</p> <p></p> <pre><code># For zsh\nplugins=(\n  kube-ps1\n)\n\nPROMPT='$(kube_ps1)'$PROMPT # or RPROMPT='$(kube_ps1)'\n</code></pre>"},{"location":"en/example/#fzf","title":"fzf","text":"<p>A good search engine in the terminal</p> <p>https://github.com/junegunn/fzf</p> <pre><code>git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf &amp;&amp; \\\n    ~/.fzf/install --bin  &amp;&amp; ~/.fzf/install --completion --update-rc --key-bindings --no-bash --no-fish  &amp;&amp; \\\n    grep  -q 'fzf.zsh' ~/.zshrc || echo '[ -f ~/.fzf.zsh ] &amp;&amp; source ~/.fzf.zsh' &gt;&gt; ~/.zshrc\n</code></pre>"},{"location":"en/example/#k9s","title":"k9s","text":"<p>https://k9scli.io/topics/commands/</p> <p>k9s will use the kubemux environment, and will not impact other context.</p> <p></p> <pre><code>bin install https://github.com/derailed/k9s\n   \u2022 Getting latest release for derailed/k9s\n\nMultiple matches found, please select one:\n\n [1] k9s_Linux_amd64.tar.gz\n [2] k9s_Linux_amd64.tar.gz.sbom\n [3] k9s_linux_amd64.apk\n Select an option: 1\n   \u2022 Starting download of https://api.github.com/repos/derailed/k9s/releases/assets/157727973\n28.58 MiB / 28.58 MiB [------------------------------------------------------------------------] 100.00% 7.94 MiB p/s 4s\n\nMultiple matches found, please select one:\n\n [1] LICENSE\n [2] README.md\n [3] k9s\n Select an option: 3\n   \u2022 Copying for k9s@v0.32.4 into /home/corvo/.local/bin/k9s\n   \u2022 Done installing k9s v0.32.4\n</code></pre>"},{"location":"en/example/#tmuxinator-example-template","title":"tmuxinator example template","text":"<pre><code>name: &lt;%= @settings[\"project\"] %&gt;\nroot: ~/GitRepo\n\nsocket_name: &lt;%= @settings[\"project\"] %&gt;\non_project_start:\n\n  # Since a jump host is needed to connect to the API,\n  # I used ssh to open a socks5 proxy on my local machine.\n  # The following method is used to obtain a locally available port and the corresponding jump host:\n  - export KUBECONFIG=~/.kube/config-&lt;%= @settings[\"project\"] %&gt;\n  - export TMUX_SSH_PORT=\"$(python3 -c 'import socket; s=socket.socket(); s.bind((\"\", 0)); print(s.getsockname()[1])')\"\n  - export TMUX_SSH_HOST=\"&lt;%= @settings[\"host\"] %&gt;\"\nstartup_window: kubectl\n\nwindows:\n  - proxy:\n      layout: main-vertical\n      panes:\n        - startup:\n          - ls -alh\n          - yq -i e '.current-context |= \"tpl-&lt;%= @settings[\"project\"] %&gt;\"' $KUBECONFIG\n          - yq -i e '.contexts[0].name |= \"tpl-&lt;%= @settings[\"project\"] %&gt;\"' $KUBECONFIG\n          - yq -i e \".clusters[0].cluster.proxy-url |=\\\"socks5://127.0.0.1:$TMUX_SSH_PORT\\\"\" $KUBECONFIG\n          - ssh -D $TMUX_SSH_PORT $TMUX_SSH_HOST\n  - kubectl: ls # kubectl get pods\n</code></pre> <p>In addition to modifying the context, you can also add prompts to the terminal PS1, similar to this:</p> <p></p>"},{"location":"en/intro/","title":"Introduction","text":""},{"location":"en/intro/#installation","title":"Installation","text":""},{"location":"en/intro/#macos","title":"MacOS","text":"<pre><code>brew install corvofeng/tap/kubemux\n</code></pre>"},{"location":"en/intro/#linux","title":"Linux","text":"<p>Using bin: https://github.com/marcosnils/bin</p> <pre><code>bin install https://github.com/corvofeng/kubemux ~/usr/bin\n# bin ls\n# Path                  Version  URL                                                       Status\n# ~/usr/bin/kubemux     v1.1.2   https://github.com/corvofeng/kubemux/releases/tag/v1.1.2  OK\n</code></pre> <p>Using binary</p> <pre><code>cd /tmp\nrm kubemux_linux_amd64.tar.gz\nwget https://github.com/corvofeng/kubemux/releases/latest/download/kubemux_linux_amd64.tar.gz\ntar -zxvf kubemux_linux_amd64.tar.gz\nsudo install -v kubemux /usr/local/bin\n</code></pre>"},{"location":"en/intro/#completion","title":"Completion","text":"<p>To enable shell completion, you can use the following commands:</p> <p>For Bash: <pre><code>source &lt;(kubemux completion bash)\n</code></pre></p> <p>For Zsh: <pre><code>source &lt;(kubemux completion zsh)\n</code></pre></p>"},{"location":"en/usage/","title":"How to use kubemux","text":""},{"location":"en/usage/#tmuxinator","title":"tmuxinator","text":"<p>kubemux supports the tmuxinator configuration and template, which was the original inspiration behind kubemux.</p> <pre><code>mkdir ~/.tmuxinator\n\necho '\nname: kubemux\nroot: \"~/\"\nwindows:\n  - p1:\n    - ls\n    - pwd\n  - p2:\n    - pwd\n    - echo \"hello world\"\n  - p3: htop\n' &gt; ~/.tmuxinator/kubemux.yml\n\nkubemux -p kubemux\n</code></pre> <p>For full docs, please refer to Tmuxinator</p>"},{"location":"en/usage/#kubeconfig","title":"kubeconfig","text":"<p>As I used this project more, I found that I didn't need excessive customization for tmux, but simply to open the kubeconfig I desired. Therefore, I extended the project itself to better support kubeconfig configurations. I also added support for auto-completion, making it quicker to use your Kubernetes cluster now.</p> <pre><code>ls ~/.kube\n# pve-kube.config xxx\n\nkubemux kube --kube pve-kube.config\n\n# I suggest you add the completion support\n#   source &lt;(kubemux completion bash)\n#   source &lt;(kubemux completion zsh)\n# or you can add the command into the .bashrc or .zshrc.\nkubemux kube --kube &lt;tab&gt;\n</code></pre> <p>For full docs, please refer to kubeconfig</p>"},{"location":"en/why/","title":"Why I create this tool","text":""},{"location":"en/why/#kubernetes-multi-cluster-management-solution","title":"Kubernetes Multi-Cluster Management Solution","text":"<p>The official Kubernetes website provides a solution for switching between clusters using the context in KUBECONFIG.</p> <p>https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/</p> <pre><code>apiVersion: v1\nkind: Config\npreferences: {}\n\nclusters:\n- cluster:\n  name: development\n- cluster:\n  name: test\n\nusers:\n- name: developer\n- name: experimenter\n\ncontexts:\n- context:\n  name: dev-frontend\n- context:\n  name: dev-storage\n- context:\n  name: exp-test\n</code></pre> <p>Many existing tools for managing multiple Kubernetes clusters, such as kubecm, rely on maintaining a single KUBECONFIG file. This approach has several drawbacks:</p> <ol> <li>KUBECONFIG file maintenance: Adding and deleting clusters requires manually editing the KUBECONFIG file, which can become tedious and error-prone, especially when managing a large number of clusters.</li> <li>ingle-cluster operation: Since all clusters are configured in the same KUBECONFIG file, only one cluster can be operated on at a time. This can be inconvenient and inefficient in a multi-cluster management environment.</li> </ol> <p>Solution using tmux configuration file splitting:</p> <p>To address these problems, I propose a solution that utilizes tmux configuration file splitting. This approach involves creating a separate tmux session for each Kubernetes cluster. Each tmux session has its own KUBECONFIG file, which allows you to operate on multiple clusters simultaneously and independently.</p>"},{"location":"en/why/#tmux","title":"tmux","text":"<p><code>tmux</code> is a powerful terminal multiplexer that allows you to create and manage multiple sessions in the same terminal window. This is very useful for managing multiple servers or clusters because you can easily switch between different sessions without opening multiple terminal windows.</p> <p>To use tmux, you need to install it first. In most Linux distributions, you can install tmux using the following command:</p> <pre><code>sudo apt install tmux\n</code></pre> <p>After the installation is complete, you can start tmux using the following command:</p> <pre><code>tmux\n</code></pre> <p>This will create a new tmux session in your terminal window. You can use the following command to switch between different sessions:</p> <pre><code>tmux attach-session -t &lt;session-name&gt;\ntmux new-session -s &lt;session-name&gt;\n</code></pre>"},{"location":"en/why/#multiple-sessions","title":"Multiple Sessions","text":"<p>In simple terms, the <code>-L socket-name</code> parameter allows you to specify the location of the tmux socket, and different sockets correspond to completely isolated sessions.</p> <p>We can use different environment variables in different sessions to achieve environment separation.</p> <p>For example, with the following two commands, you can create two completely independent terminals with their own environment variables:</p> <pre><code>KUBECONFIG=~/.kube/config-aa tmux -L aa\nKUBECONFIG=~/.kube/config-bb tmux -L bb\n</code></pre> <p>The script here can already achieve multi-cluster management. So why do we introduce tmuxinator and my new tool kubemux?</p> <ol> <li>The configuration for the production environment needs to go through a jump host. How can we use KUBECONFIG locally? (I have attached it at the end)</li> <li>I want the tmux session to have multiple windows with their own functionalities.</li> </ol>"},{"location":"en/why/#tmuxinator","title":"tmuxinator","text":"<p>https://github.com/tmuxinator/tmuxinator</p> <p></p> <p>It is a tool written in Ruby that allows you to define tmux terminals in YAML format. It also supports templating. Here is an example of a templated YAML file:</p>"},{"location":"en/why/#usage","title":"Usage","text":"<pre><code>name: project\nroot: ~/&lt;%= @settings[\"workspace\"] %&gt;\n# tmuxinator start project workspace=~/workspace/todo\n\nwindows:\n  - small_project:\n      root: ~/projects/company/small_project\n      panes:\n        - start this\n        - start that\n</code></pre> <p>During the months of managing cluster environment migration, some of the most frequently used commands were:</p> <pre><code>tmuxinator tpl project=ingame-pre-na\ntmuxinator tpl project=ingame-pre-sg\ntmuxinator tpl project=ingame-pre-fra\n</code></pre> <p>It can help me perfectly differentiate different environments, and because I use fzf, I can even fuzzy search for the environment I want to open.</p> <p></p>"},{"location":"en/why/#limitation","title":"Limitation","text":"<p>Since it is written in Ruby, it requires a relatively new version of Ruby installed on the machine. AWS requires logging into a jump host for operations, but the machines we use are very old, and I don't want to compile and reinstall Ruby. After a quick look at the code, I found that it doesn't use any advanced features. It would be very easy to completely rewrite it in Golang.</p>"},{"location":"en/usage/kubeconfig/","title":"kubeconfig","text":"<p>As I used this project more, I found that I didn't need excessive customization for tmux, but simply to open the kubeconfig I desired. Therefore, I extended the project itself to better support kubeconfig configurations. I also added support for auto-completion, making it quicker to use your Kubernetes cluster now.</p> <pre><code>ls ~/.kube\n# pve-kube.config xxx\n\nkubemux kube --kube pve-kube.config\n\n# I suggest you add the completion support\n#   source &lt;(kubemux completion bash)\n#   source &lt;(kubemux completion zsh)\n# or you can add the command into the .bashrc or .zshrc.\nkubemux kube --kube &lt;tab&gt;\n</code></pre>"},{"location":"en/usage/tmuxinator/","title":"tmuxinator","text":""},{"location":"en/usage/tmuxinator/#basic-usage","title":"Basic Usage","text":"<pre><code>mkdir ~/.tmuxinator\n\necho '\nname: kubemux\nroot: \"~/\"\nwindows:\n  - p1:\n    - ls\n    - pwd\n  - p2:\n    - pwd\n    - echo \"hello world\"\n  - p3: htop\n' &gt; ~/.tmuxinator/kubemux.yml\n\nkubemux -p kubemux\n</code></pre>"},{"location":"en/usage/tmuxinator/#erb-template-support","title":"ERB template support","text":"<pre><code>mkdir -pv ~/.tmuxinator\n\necho '\nname: &lt;%= @settings[\"project\"] %&gt;\nroot: ~/\n\non_project_start:\n  - export KUBECONFIG=~/.kube/config-&lt;%= @settings[\"project\"] %&gt;\n\nwindows:\n  - kubectl: ls\n  - env: echo $KUBECONFIG\n' &gt; ~/.tmuxinator/example-tpl.yml\n\nkubemux -p example-tpl --set project=hello\n</code></pre> <p>You can use <code>-p example-tpl</code> to specify the template file we use The <code>--set project=hello</code> means we will replace <code>&lt;%= @settings[\"project\"] %&gt;</code> with <code>hello</code></p>"},{"location":"en/usage/zellij/","title":"zellij support","text":"<p>News: 2024-12-07 I add the support for zellij, we can reuse the tmuxinator config for zellij now!</p>"},{"location":"en/usage/zellij/#install-zellij","title":"Install zellij","text":"<p>Please install zellij first, I still use the <code>bin</code>, or refer to https://zellij.dev/</p> <pre><code># Using bin: https://github.com/marcosnils/bin\nbin install https://github.com/zellij-org/zellij\n   \u2022 Getting latest release for zellij-org/zellij\n\nMultiple matches found, please select one:\n\n [1] zellij-x86_64-unknown-linux-musl.sha256sum\n [2] zellij-x86_64-unknown-linux-musl.tar.gz\n Select an option: 2\n   \u2022 Starting download of https://api.github.com/repos/zellij-org/zellij/releases/assets/207566049\n12.95 MiB / 12.95 MiB [----------------------------------------] 100.00% 2.43 MiB p/s 5s\n   \u2022 Copying for zellij@v0.41.2 into /home/corvo/.local/bin/zellij\n   \u2022 Done installing zellij v0.41.2\n</code></pre> <pre><code>kubemux -h\n# --plexer string      Specify the plexer we want to use, [tmux|zellij]\n</code></pre> <p>You may set <code>--plexer</code> to use the zellij or tmux.  However, if you don't set it. the <code>kubemux</code> will detect if we can use zellij as a default plexer.</p>"},{"location":"en/usage/zellij/#example-script","title":"Example Script","text":"<pre><code>mkdir ~/.tmuxinator\n\necho '\nname: kubemux\nroot: \"~/\"\nwindows:\n  - p1:\n    - ls\n    - pwd\n  - p2:\n    - pwd\n    - echo \"hello world\"\n  - p3: htop\n' &gt; ~/.tmuxinator/kubemux.yml\n\nkubemux --plexer zellij -p kubemux\n</code></pre>"},{"location":"zh/example/","title":"\u4e3a\u4ec0\u4e48\u521b\u5efa\u8fd9\u4e2a\u5de5\u5177","text":""},{"location":"zh/example/#kubernetes","title":"Kubernetes \u591a\u96c6\u7fa4\u7ba1\u7406\u65b9\u6848","text":"<p>Kubernetes \u5b98\u65b9\u7f51\u7ad9\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f7f\u7528 KUBECONFIG \u4e2d\u7684 context \u6765\u5207\u6362\u96c6\u7fa4\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> <p>https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/</p> <pre><code>apiVersion: v1\nkind: Config\npreferences: {}\n\nclusters:\n- cluster:\n  name: development\n- cluster:\n  name: test\n\nusers:\n- name: developer\n- name: experimenter\n\ncontexts:\n- context:\n  name: dev-frontend\n- context:\n  name: dev-storage\n- context:\n  name: exp-test\n</code></pre> <p>\u8bb8\u591a\u73b0\u6709\u7684\u591a Kubernetes \u96c6\u7fa4\u7ba1\u7406\u5de5\u5177\uff08\u5982 kubecm\uff09\u90fd\u4f9d\u8d56\u4e8e\u7ef4\u62a4\u5355\u4e2a KUBECONFIG \u6587\u4ef6\u3002\u8fd9\u79cd\u65b9\u6cd5\u6709\u51e0\u4e2a\u7f3a\u70b9\uff1a</p> <ol> <li>KUBECONFIG \u6587\u4ef6\u7ef4\u62a4\uff1a\u6dfb\u52a0\u548c\u5220\u9664\u96c6\u7fa4\u9700\u8981\u624b\u52a8\u7f16\u8f91 KUBECONFIG \u6587\u4ef6\uff0c\u8fd9\u5728\u7ba1\u7406\u5927\u91cf\u96c6\u7fa4\u65f6\u53ef\u80fd\u4f1a\u53d8\u5f97\u7e41\u7410\u4e14\u5bb9\u6613\u51fa\u9519\u3002</li> <li>\u5355\u96c6\u7fa4\u64cd\u4f5c\uff1a\u7531\u4e8e\u6240\u6709\u96c6\u7fa4\u90fd\u914d\u7f6e\u5728\u540c\u4e00\u4e2a KUBECONFIG \u6587\u4ef6\u4e2d\uff0c\u4e00\u6b21\u53ea\u80fd\u64cd\u4f5c\u4e00\u4e2a\u96c6\u7fa4\u3002\u8fd9\u5728\u591a\u96c6\u7fa4\u7ba1\u7406\u73af\u5883\u4e2d\u53ef\u80fd\u4f1a\u4e0d\u4fbf\u4e14\u6548\u7387\u4f4e\u4e0b\u3002</li> </ol> <p>\u4f7f\u7528 tmux \u914d\u7f6e\u6587\u4ef6\u5206\u5272\u7684\u89e3\u51b3\u65b9\u6848\uff1a</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u63d0\u51fa\u4e86\u4e00\u4e2a\u4f7f\u7528 tmux \u914d\u7f6e\u6587\u4ef6\u5206\u5272\u7684\u89e3\u51b3\u65b9\u6848\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e3a\u6bcf\u4e2a Kubernetes \u96c6\u7fa4\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684 tmux \u4f1a\u8bdd\u3002\u6bcf\u4e2a tmux \u4f1a\u8bdd\u90fd\u6709\u81ea\u5df1\u7684 KUBECONFIG \u6587\u4ef6\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u540c\u65f6\u72ec\u7acb\u64cd\u4f5c\u591a\u4e2a\u96c6\u7fa4\u3002</p>"},{"location":"zh/example/#tmux","title":"tmux","text":"<p><code>tmux</code> \u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u7ec8\u7aef\u590d\u7528\u5668\uff0c\u5141\u8bb8\u60a8\u5728\u540c\u4e00\u4e2a\u7ec8\u7aef\u7a97\u53e3\u4e2d\u521b\u5efa\u548c\u7ba1\u7406\u591a\u4e2a\u4f1a\u8bdd\u3002\u8fd9\u5bf9\u4e8e\u7ba1\u7406\u591a\u4e2a\u670d\u52a1\u5668\u6216\u96c6\u7fa4\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u60a8\u53ef\u4ee5\u5728\u4e0d\u6253\u5f00\u591a\u4e2a\u7ec8\u7aef\u7a97\u53e3\u7684\u60c5\u51b5\u4e0b\u8f7b\u677e\u5207\u6362\u4e0d\u540c\u7684\u4f1a\u8bdd\u3002</p> <p>\u8981\u4f7f\u7528 tmux\uff0c\u60a8\u9700\u8981\u5148\u5b89\u88c5\u5b83\u3002\u5728\u5927\u591a\u6570 Linux \u53d1\u884c\u7248\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 tmux\uff1a</p> <pre><code>sudo apt install tmux\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u542f\u52a8 tmux\uff1a</p> <pre><code>tmux\n</code></pre> <p>\u8fd9\u5c06\u5728\u60a8\u7684\u7ec8\u7aef\u7a97\u53e3\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 tmux \u4f1a\u8bdd\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5728\u4e0d\u540c\u7684\u4f1a\u8bdd\u4e4b\u95f4\u5207\u6362\uff1a</p> <pre><code>tmux attach-session -t &lt;session-name&gt;\ntmux new-session -s &lt;session-name&gt;\n</code></pre>"},{"location":"zh/example/#_2","title":"\u591a\u4f1a\u8bdd","text":"<p>\u7b80\u5355\u6765\u8bf4\uff0c<code>-L socket-name</code> \u53c2\u6570\u5141\u8bb8\u60a8\u6307\u5b9a tmux socket \u7684\u4f4d\u7f6e\uff0c\u4e0d\u540c\u7684 socket \u5bf9\u5e94\u5b8c\u5168\u9694\u79bb\u7684\u4f1a\u8bdd\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u4f1a\u8bdd\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u73af\u5883\u53d8\u91cf\u6765\u5b9e\u73b0\u73af\u5883\u9694\u79bb\u3002</p> <p>\u4f8b\u5982\uff0c\u901a\u8fc7\u4ee5\u4e0b\u4e24\u4e2a\u547d\u4ee4\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u4e24\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u3001\u62e5\u6709\u81ea\u5df1\u73af\u5883\u53d8\u91cf\u7684\u7ec8\u7aef\uff1a</p> <pre><code>KUBECONFIG=~/.kube/config-aa tmux -L aa\nKUBECONFIG=~/.kube/config-bb tmux -L bb\n</code></pre> <p>\u8fd9\u91cc\u811a\u672c\u5df2\u7ecf\u53ef\u4ee5\u5b9e\u73b0\u591a\u96c6\u7fa4\u7ba1\u7406\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd8\u8981\u5f15\u5165 tmuxinator \u548c\u6211\u7684\u65b0\u5de5\u5177 kubemux \u5462\uff1f</p> <ol> <li>\u751f\u4ea7\u73af\u5883\u7684\u914d\u7f6e\u9700\u8981\u901a\u8fc7\u8df3\u677f\u673a\uff0c\u5982\u4f55\u5728\u672c\u5730\u4f7f\u7528 KUBECONFIG\uff1f\uff08\u6211\u5728\u6700\u540e\u9644\u4e0a\u4e86\u8bf4\u660e\uff09</li> <li>\u6211\u5e0c\u671b tmux \u4f1a\u8bdd\u6709\u591a\u4e2a\u5177\u6709\u5404\u81ea\u529f\u80fd\u7684\u7a97\u53e3\u3002</li> </ol>"},{"location":"zh/example/#tmuxinator","title":"tmuxinator","text":"<p>https://github.com/tmuxinator/tmuxinator</p> <p></p> <p>\u8fd9\u662f\u4e00\u4e2a\u7528 Ruby \u7f16\u5199\u7684\u5de5\u5177\uff0c\u5141\u8bb8\u60a8\u4ee5 YAML \u683c\u5f0f\u5b9a\u4e49 tmux \u7ec8\u7aef\u3002\u5b83\u8fd8\u652f\u6301\u6a21\u677f\u529f\u80fd\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u6a21\u677f\u5316 YAML \u6587\u4ef6\u7684\u793a\u4f8b\uff1a</p>"},{"location":"zh/example/#_3","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<pre><code>name: project\nroot: ~/&lt;%= @settings[\"workspace\"] %&gt;\n# tmuxinator start project workspace=~/workspace/todo\n\nwindows:\n  - small_project:\n      root: ~/projects/company/small_project\n      panes:\n        - start this\n        - start that\n</code></pre> <p>\u5728\u7ba1\u7406\u96c6\u7fa4\u73af\u5883\u8fc1\u79fb\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u4e00\u4e9b\u6700\u5e38\u7528\u7684\u547d\u4ee4\u662f\uff1a</p> <pre><code>tmuxinator tpl project=ingame-pre-na\ntmuxinator tpl project=ingame-pre-sg\ntmuxinator tpl project=ingame-pre-fra\n</code></pre> <p>\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u5b8c\u7f8e\u5730\u533a\u5206\u4e0d\u540c\u7684\u73af\u5883\uff0c\u800c\u4e14\u56e0\u4e3a\u6211\u4f7f\u7528 fzf\uff0c\u6211\u751a\u81f3\u53ef\u4ee5\u6a21\u7cca\u641c\u7d22\u6211\u60f3\u8981\u6253\u5f00\u7684\u73af\u5883\u3002</p> <p></p>"},{"location":"zh/example/#_4","title":"\u5c40\u9650\u6027","text":"<p>\u7531\u4e8e\u5b83\u662f\u7528 Ruby \u7f16\u5199\u7684\uff0c\u9700\u8981\u5728\u673a\u5668\u4e0a\u5b89\u88c5\u76f8\u5bf9\u8f83\u65b0\u7248\u672c\u7684 Ruby\u3002AWS \u9700\u8981\u767b\u5f55\u8df3\u677f\u673a\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f46\u6211\u4eec\u4f7f\u7528\u7684\u673a\u5668\u90fd\u5f88\u65e7\uff0c\u6211\u4e0d\u60f3\u7f16\u8bd1\u548c\u91cd\u65b0\u5b89\u88c5 Ruby\u3002 \u5feb\u901f\u67e5\u770b\u4ee3\u7801\u540e\uff0c\u6211\u53d1\u73b0\u5b83\u5e76\u6ca1\u6709\u4f7f\u7528\u4efb\u4f55\u9ad8\u7ea7\u7279\u6027\u3002\u7528 Golang \u5b8c\u5168\u91cd\u5199\u5b83\u4f1a\u5f88\u5bb9\u6613\u3002</p>"},{"location":"zh/example/#_5","title":"\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"zh/example/#kube-ps1","title":"kube-ps1","text":"<p>\u5982\u679c\u60a8\u60f3\u5728 zsh \u4e2d\u4f7f\u7528 kubectl\uff0c\u6211\u63a8\u8350\u4f7f\u7528 <code>kube-ps1</code></p> <p>https://github.com/jonmosco/kube-ps1</p> <p></p> <pre><code># \u5bf9\u4e8e zsh\nplugins=(\n  kube-ps1\n)\n\nPROMPT='$(kube_ps1)'$PROMPT # \u6216 RPROMPT='$(kube_ps1)'\n</code></pre>"},{"location":"zh/example/#fzf","title":"fzf","text":"<p>\u7ec8\u7aef\u4e2d\u7684\u4f18\u79c0\u641c\u7d22\u5f15\u64ce</p> <p>https://github.com/junegunn/fzf</p> <pre><code>git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf &amp;&amp; \\\n    ~/.fzf/install --bin  &amp;&amp; ~/.fzf/install --completion --update-rc --key-bindings --no-bash --no-fish  &amp;&amp; \\\n    grep  -q 'fzf.zsh' ~/.zshrc || echo '[ -f ~/.fzf.zsh ] &amp;&amp; source ~/.fzf.zsh' &gt;&gt; ~/.zshrc\n</code></pre>"},{"location":"zh/example/#k9s","title":"k9s","text":"<p>https://k9scli.io/topics/commands/</p> <p>k9s \u5c06\u4f7f\u7528 kubemux \u73af\u5883\uff0c\u4e14\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u4e0a\u4e0b\u6587\u3002</p> <p></p> <pre><code>bin install https://github.com/derailed/k9s\n   \u2022 Getting latest release for derailed/k9s\n\nMultiple matches found, please select one:\n\n [1] k9s_Linux_amd64.tar.gz\n [2] k9s_Linux_amd64.tar.gz.sbom\n [3] k9s_linux_amd64.apk\n Select an option: 1\n   \u2022 Starting download of https://api.github.com/repos/derailed/k9s/releases/assets/157727973\n28.58 MiB / 28.58 MiB [------------------------------------------------------------------------] 100.00% 7.94 MiB p/s 4s\n\nMultiple matches found, please select one:\n\n [1] LICENSE\n [2] README.md\n [3] k9s\n Select an option: 3\n   \u2022 Copying for k9s@v0.32.4 into /home/corvo/.local/bin/k9s\n   \u2022 Done installing k9s v0.32.4\n</code></pre>"},{"location":"zh/example/#tmuxinator_1","title":"tmuxinator \u793a\u4f8b\u6a21\u677f","text":"<pre><code>name: &lt;%= @settings[\"project\"] %&gt;\nroot: ~/GitRepo\n\nsocket_name: &lt;%= @settings[\"project\"] %&gt;\non_project_start:\n\n  # \u7531\u4e8e\u9700\u8981\u8df3\u677f\u673a\u8fde\u63a5 API\uff0c\n  # \u6211\u4f7f\u7528 ssh \u5728\u672c\u5730\u673a\u5668\u4e0a\u6253\u5f00\u4e86\u4e00\u4e2a socks5 \u4ee3\u7406\u3002\n  # \u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\u83b7\u53d6\u672c\u5730\u53ef\u7528\u7aef\u53e3\u548c\u5bf9\u5e94\u7684\u8df3\u677f\u673a\uff1a\n  - export KUBECONFIG=~/.kube/config-&lt;%= @settings[\"project\"] %&gt;\n  - export TMUX_SSH_PORT=\"$(python3 -c 'import socket; s=socket.socket(); s.bind((\"\", 0)); print(s.getsockname()[1])')\"\n  - export TMUX_SSH_HOST=\"&lt;%= @settings[\"host\"] %&gt;\"\nstartup_window: kubectl\n\nwindows:\n  - proxy:\n      layout: main-vertical\n      panes:\n        - startup:\n          - ls -alh\n          - yq -i e '.current-context |= \"tpl-&lt;%= @settings[\"project\"] %&gt;\"' $KUBECONFIG\n          - yq -i e '.contexts[0].name |= \"tpl-&lt;%= @settings[\"project\"] %&gt;\"' $KUBECONFIG\n          - yq -i e \".clusters[0].cluster.proxy-url |=\\\"socks5://127.0.0.1:$TMUX_SSH_PORT\\\"\" $KUBECONFIG\n          - ssh -D $TMUX_SSH_PORT $TMUX_SSH_HOST\n  - kubectl: ls # kubectl get pods\n</code></pre> <p>\u9664\u4e86\u4fee\u6539\u4e0a\u4e0b\u6587\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u5728\u7ec8\u7aef PS1 \u4e2d\u6dfb\u52a0\u63d0\u793a\uff0c\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <p></p>"},{"location":"zh/intro/","title":"\u4e2d\u6587\u6587\u6863","text":""},{"location":"zh/intro/#_2","title":"\u5b89\u88c5","text":""},{"location":"zh/intro/#macos","title":"MacOS","text":"<pre><code>brew install corvofeng/tap/kubemux\n</code></pre>"},{"location":"zh/intro/#linux","title":"Linux","text":"<p>\u4f7f\u7528 bin \u5b89\u88c5: https://github.com/marcosnils/bin</p> <pre><code>bin install https://github.com/corvofeng/kubemux ~/usr/bin\n# bin ls\n# Path                  Version  URL                                                       Status\n# ~/usr/bin/kubemux     v1.1.2   https://github.com/corvofeng/kubemux/releases/tag/v1.1.2  OK\n</code></pre> <p>\u4f7f\u7528\u4e8c\u8fdb\u5236\u6587\u4ef6\u5b89\u88c5</p> <pre><code>cd /tmp\nrm kubemux_linux_amd64.tar.gz\nwget https://github.com/corvofeng/kubemux/releases/latest/download/kubemux_linux_amd64.tar.gz\ntar -zxvf kubemux_linux_amd64.tar.gz\nsudo install -v kubemux /usr/local/bin\n</code></pre>"},{"location":"zh/intro/#_3","title":"\u547d\u4ee4\u8865\u5168","text":"<p>\u8981\u542f\u7528shell\u8865\u5168\u529f\u80fd\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <p>\u5bf9\u4e8e Bash\uff1a bash source &lt;(kubemux completion bash) <pre><code>\u5bf9\u4e8e Zsh\uff1a\n```bash\nsource &lt;(kubemux completion zsh)\n</code></pre></p>"},{"location":"zh/intro/#_4","title":"\u9879\u76ee\u7b80\u4ecb","text":"<p>kubemux \u662f\u4e00\u4e2a\u7528\u4e8e\u7ba1\u7406\u591a\u4e2a Kubernetes \u96c6\u7fa4\u7684 tmux \u5c01\u88c5\u5de5\u5177\uff0c\u5e76\u96c6\u6210\u4e86 tmuxinator \u7684\u529f\u80fd\u3002</p> <p>\u672c\u9879\u76ee\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5927\u91cf\u4f7f\u7528\u4e86 ChatGPT\uff0c\u4e3b\u8981\u7528\u4e8e\u7f16\u5199\u903b\u8f91\u548c\u5355\u5143\u6d4b\u8bd5\u3002\u539f\u672c\u9884\u8ba1\u9700\u8981 2-3 \u5929\u7684\u5de5\u4f5c\u91cf\u88ab\u7f29\u77ed\u5230 1 \u5929\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u975e\u5e38\u597d\uff0c\u91cd\u5199\u540e\u7684 kubemux \u6ca1\u6709\u4f9d\u8d56\uff0c\u5b89\u88c5\u975e\u5e38\u8f7b\u91cf\u3002</p> <p>\u9879\u76ee\u5df2\u5728 GitHub \u5f00\u6e90\uff0c\u5e76\u4e14\u5e94\u8be5\u4e0e tmuxinator \u7684\u914d\u7f6e\u517c\u5bb9\u3002\u5982\u679c\u60a8\u53d1\u73b0\u4efb\u4f55\u7f3a\u5931\u7684\u529f\u80fd\uff0c\u6b22\u8fce\u63d0\u51fa issue\u3002</p>"},{"location":"zh/intro/#_5","title":"\u4e3b\u8981\u529f\u80fd","text":"<ul> <li>\u652f\u6301\u591a\u96c6\u7fa4\u7ba1\u7406</li> <li>\u517c\u5bb9 tmuxinator \u914d\u7f6e</li> <li>\u652f\u6301 kubeconfig \u914d\u7f6e</li> <li>\u63d0\u4f9b\u547d\u4ee4\u884c\u8865\u5168</li> <li>\u652f\u6301 zellij \u7ec8\u7aef\u590d\u7528\u5668</li> </ul>"},{"location":"zh/intro/#_6","title":"\u6587\u6863\u5bfc\u822a","text":"<ul> <li>\u4f7f\u7528\u8bf4\u660e</li> <li>\u6700\u4f73\u5b9e\u8df5</li> <li>\u4e3a\u4ec0\u4e48\u521b\u5efa\u8fd9\u4e2a\u5de5\u5177 ```</li> </ul>"},{"location":"zh/usage/","title":"\u5982\u4f55\u4f7f\u7528 kubemux","text":""},{"location":"zh/usage/#tmuxinator","title":"tmuxinator","text":"<p>kubemux \u652f\u6301 tmuxinator \u7684\u914d\u7f6e\u548c\u6a21\u677f\u529f\u80fd\uff0c\u8fd9\u4e5f\u662f kubemux \u6700\u521d\u7684\u7075\u611f\u6765\u6e90\u3002</p> <pre><code>mkdir ~/.tmuxinator\n\necho '\nname: kubemux\nroot: \"~/\"\nwindows:\n  - p1:\n    - ls\n    - pwd\n  - p2:\n    - pwd\n    - echo \"hello world\"\n  - p3: htop\n' &gt; ~/.tmuxinator/kubemux.yml\n\nkubemux -p kubemux\n</code></pre> <p>\u5b8c\u6574\u6587\u6863\u8bf7\u53c2\u8003 Tmuxinator</p>"},{"location":"zh/usage/#kubeconfig","title":"kubeconfig","text":"<p>\u968f\u7740\u9879\u76ee\u7684\u4f7f\u7528\uff0c\u6211\u53d1\u73b0\u5e76\u4e0d\u9700\u8981\u5bf9 tmux \u8fdb\u884c\u8fc7\u591a\u7684\u81ea\u5b9a\u4e49\uff0c\u800c\u662f\u53ea\u9700\u8981\u6253\u5f00\u6211\u60f3\u8981\u7684 kubeconfig\u3002\u56e0\u6b64\uff0c\u6211\u6269\u5c55\u4e86\u9879\u76ee\u672c\u8eab\u4ee5\u66f4\u597d\u5730\u652f\u6301 kubeconfig \u914d\u7f6e\u3002\u6211\u8fd8\u6dfb\u52a0\u4e86\u81ea\u52a8\u8865\u5168\u652f\u6301\uff0c\u73b0\u5728\u4f7f\u7528 Kubernetes \u96c6\u7fa4\u53d8\u5f97\u66f4\u52a0\u5feb\u6377\u3002</p> <pre><code>ls ~/.kube\n# pve-kube.config xxx\n\nkubemux kube --kube pve-kube.config\n\n# \u5efa\u8bae\u6dfb\u52a0\u8865\u5168\u652f\u6301\n#   source &lt;(kubemux completion bash)\n#   source &lt;(kubemux completion zsh)\n# \u6216\u8005\u60a8\u53ef\u4ee5\u5c06\u547d\u4ee4\u6dfb\u52a0\u5230 .bashrc \u6216 .zshrc \u4e2d\u3002\nkubemux kube --kube &lt;tab&gt;\n</code></pre> <p>\u5b8c\u6574\u6587\u6863\u8bf7\u53c2\u8003 kubeconfig </p>"},{"location":"zh/why/","title":"\u4e3a\u4ec0\u4e48\u521b\u5efa\u8fd9\u4e2a\u5de5\u5177","text":""},{"location":"zh/why/#kubernetes","title":"Kubernetes \u591a\u96c6\u7fa4\u7ba1\u7406\u65b9\u6848","text":"<p>Kubernetes \u5b98\u65b9\u7f51\u7ad9\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f7f\u7528 KUBECONFIG \u4e2d\u7684 context \u6765\u5207\u6362\u96c6\u7fa4\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> <p>https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/</p> <pre><code>apiVersion: v1\nkind: Config\npreferences: {}\n\nclusters:\n- cluster:\n  name: development\n- cluster:\n  name: test\n\nusers:\n- name: developer\n- name: experimenter\n\ncontexts:\n- context:\n  name: dev-frontend\n- context:\n  name: dev-storage\n- context:\n  name: exp-test\n</code></pre> <p>\u8bb8\u591a\u73b0\u6709\u7684\u591a Kubernetes \u96c6\u7fa4\u7ba1\u7406\u5de5\u5177\uff08\u5982 kubecm\uff09\u90fd\u4f9d\u8d56\u4e8e\u7ef4\u62a4\u5355\u4e2a KUBECONFIG \u6587\u4ef6\u3002\u8fd9\u79cd\u65b9\u6cd5\u6709\u51e0\u4e2a\u7f3a\u70b9\uff1a</p> <ol> <li>KUBECONFIG \u6587\u4ef6\u7ef4\u62a4\uff1a\u6dfb\u52a0\u548c\u5220\u9664\u96c6\u7fa4\u9700\u8981\u624b\u52a8\u7f16\u8f91 KUBECONFIG \u6587\u4ef6\uff0c\u8fd9\u5728\u7ba1\u7406\u5927\u91cf\u96c6\u7fa4\u65f6\u53ef\u80fd\u4f1a\u53d8\u5f97\u7e41\u7410\u4e14\u5bb9\u6613\u51fa\u9519\u3002</li> <li>\u5355\u96c6\u7fa4\u64cd\u4f5c\uff1a\u7531\u4e8e\u6240\u6709\u96c6\u7fa4\u90fd\u914d\u7f6e\u5728\u540c\u4e00\u4e2a KUBECONFIG \u6587\u4ef6\u4e2d\uff0c\u4e00\u6b21\u53ea\u80fd\u64cd\u4f5c\u4e00\u4e2a\u96c6\u7fa4\u3002\u8fd9\u5728\u591a\u96c6\u7fa4\u7ba1\u7406\u73af\u5883\u4e2d\u53ef\u80fd\u4f1a\u4e0d\u4fbf\u4e14\u6548\u7387\u4f4e\u4e0b\u3002</li> </ol>"},{"location":"zh/why/#tmux","title":"\u4f7f\u7528 tmux \u914d\u7f6e\u6587\u4ef6\u5206\u5272\u7684\u89e3\u51b3\u65b9\u6848","text":"<p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u63d0\u51fa\u4e86\u4e00\u4e2a\u4f7f\u7528 tmux \u914d\u7f6e\u6587\u4ef6\u5206\u5272\u7684\u89e3\u51b3\u65b9\u6848\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e3a\u6bcf\u4e2a Kubernetes \u96c6\u7fa4\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684 tmux \u4f1a\u8bdd\u3002\u6bcf\u4e2a tmux \u4f1a\u8bdd\u90fd\u6709\u81ea\u5df1\u7684 KUBECONFIG \u6587\u4ef6\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u540c\u65f6\u72ec\u7acb\u64cd\u4f5c\u591a\u4e2a\u96c6\u7fa4\u3002</p>"},{"location":"zh/why/#tmux_1","title":"tmux","text":"<p><code>tmux</code> \u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u7ec8\u7aef\u590d\u7528\u5668\uff0c\u5141\u8bb8\u60a8\u5728\u540c\u4e00\u4e2a\u7ec8\u7aef\u7a97\u53e3\u4e2d\u521b\u5efa\u548c\u7ba1\u7406\u591a\u4e2a\u4f1a\u8bdd\u3002\u8fd9\u5bf9\u4e8e\u7ba1\u7406\u591a\u4e2a\u670d\u52a1\u5668\u6216\u96c6\u7fa4\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u60a8\u53ef\u4ee5\u5728\u4e0d\u6253\u5f00\u591a\u4e2a\u7ec8\u7aef\u7a97\u53e3\u7684\u60c5\u51b5\u4e0b\u8f7b\u677e\u5207\u6362\u4e0d\u540c\u7684\u4f1a\u8bdd\u3002</p> <p>\u8981\u4f7f\u7528 tmux\uff0c\u60a8\u9700\u8981\u5148\u5b89\u88c5\u5b83\u3002\u5728\u5927\u591a\u6570 Linux \u53d1\u884c\u7248\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 tmux\uff1a</p> <pre><code>sudo apt install tmux\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u542f\u52a8 tmux\uff1a</p> <pre><code>tmux\n</code></pre> <p>\u8fd9\u5c06\u5728\u60a8\u7684\u7ec8\u7aef\u7a97\u53e3\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 tmux \u4f1a\u8bdd\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5728\u4e0d\u540c\u7684\u4f1a\u8bdd\u4e4b\u95f4\u5207\u6362\uff1a</p> <pre><code>tmux attach-session -t &lt;session-name&gt;\ntmux new-session -s &lt;session-name&gt;\n</code></pre>"},{"location":"zh/why/#_2","title":"\u591a\u4f1a\u8bdd","text":"<p>\u7b80\u5355\u6765\u8bf4\uff0c<code>-L socket-name</code> \u53c2\ufffd\ufffd\ufffd\u5141\u8bb8\u60a8\u6307\u5b9a tmux socket \u7684\u4f4d\u7f6e\uff0c\u4e0d\u540c\u7684 socket \u5bf9\u5e94\u5b8c\u5168\u9694\u79bb\u7684\u4f1a\u8bdd\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u4f1a\u8bdd\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u73af\u5883\u53d8\u91cf\u6765\u5b9e\u73b0\u73af\u5883\u9694\u79bb\u3002</p> <p>\u4f8b\u5982\uff0c\u901a\u8fc7\u4ee5\u4e0b\u4e24\u4e2a\u547d\u4ee4\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u4e24\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u3001\u62e5\u6709\u81ea\u5df1\u73af\u5883\u53d8\u91cf\u7684\u7ec8\u7aef\uff1a</p> <pre><code>KUBECONFIG=~/.kube/config-aa tmux -L aa\nKUBECONFIG=~/.kube/config-bb tmux -L bb\n</code></pre> <p>\u8fd9\u91cc\u7684\u811a\u672c\u5df2\u7ecf\u53ef\u4ee5\u5b9e\u73b0\u591a\u96c6\u7fa4\u7ba1\u7406\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd8\u8981\u5f15\u5165 tmuxinator \u548c\u6211\u7684\u65b0\u5de5\u5177 kubemux \u5462\uff1f</p> <ol> <li>\u751f\u4ea7\u73af\u5883\u7684\u914d\u7f6e\u9700\u8981\u901a\u8fc7\u8df3\u677f\u673a\uff0c\u5982\u4f55\u5728\u672c\u5730\u4f7f\u7528 KUBECONFIG\uff1f\uff08\u6211\u5728\u6700\u540e\u9644\u4e0a\u4e86\u8bf4\u660e\uff09</li> <li>\u6211\u5e0c\u671b tmux \u4f1a\u8bdd\u6709\u591a\u4e2a\u5177\u6709\u5404\u81ea\u529f\u80fd\u7684\u7a97\u53e3\u3002</li> </ol>"},{"location":"zh/why/#tmuxinator","title":"tmuxinator","text":"<p>https://github.com/tmuxinator/tmuxinator</p> <p></p> <p>\u8fd9\u662f\u4e00\u4e2a\u7528 Ruby \u7f16\u5199\u7684\u5de5\u5177\uff0c\u5141\u8bb8\u60a8\u4ee5 YAML \u683c\u5f0f\u5b9a\u4e49 tmux \u7ec8\u7aef\u3002\u5b83\u8fd8\u652f\u6301\u6a21\u677f\u529f\u80fd\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u6a21\u677f\u5316 YAML \u6587\u4ef6\u7684\u793a\u4f8b\uff1a</p>"},{"location":"zh/why/#_3","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<pre><code>name: project\nroot: ~/&lt;%= @settings[\"workspace\"] %&gt;\n# tmuxinator start project workspace=~/workspace/todo\n\nwindows:\n  - small_project:\n      root: ~/projects/company/small_project\n      panes:\n        - start this\n        - start that\n</code></pre> <p>\u5728\u7ba1\u7406\u96c6\u7fa4\u73af\u5883\u8fc1\u79fb\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u4e00\u4e9b\ufffd\ufffd\ufffd\u5e38\u7528\u7684\u547d\u4ee4\u662f\uff1a</p> <pre><code>tmuxinator tpl project=ingame-pre-na\ntmuxinator tpl project=ingame-pre-sg\ntmuxinator tpl project=ingame-pre-fra\n</code></pre> <p>\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u5b8c\u7f8e\u5730\u533a\u5206\u4e0d\u540c\u7684\u73af\u5883\uff0c\u800c\u4e14\u56e0\u4e3a\u6211\u4f7f\u7528 fzf\uff0c\u6211\u751a\u81f3\u53ef\u4ee5\u6a21\u7cca\u641c\u7d22\u6211\u60f3\u8981\u6253\u5f00\u7684\u73af\u5883\u3002</p> <p></p>"},{"location":"zh/why/#_4","title":"\u5c40\u9650\u6027","text":"<p>\u7531\u4e8e\u5b83\u662f\u7528 Ruby \u7f16\u5199\u7684\uff0c\u9700\u8981\u5728\u673a\u5668\u4e0a\u5b89\u88c5\u76f8\u5bf9\u8f83\u65b0\u7248\u672c\u7684 Ruby\u3002AWS \u9700\u8981\u767b\u5f55\u8df3\u677f\u673a\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f46\u6211\u4eec\u4f7f\u7528\u7684\u673a\u5668\u90fd\u5f88\u65e7\uff0c\u6211\u4e0d\u60f3\u7f16\u8bd1\u548c\u91cd\u65b0\u5b89\u88c5 Ruby\u3002 \u5feb\u901f\u67e5\u770b\u4ee3\u7801\u540e\uff0c\u6211\u53d1\u73b0\u5b83\u5e76\u6ca1\u6709\u4f7f\u7528\u4efb\u4f55\u9ad8\u7ea7\u7279\u6027\u3002\u7528 Golang \u5b8c\u5168\u91cd\u5199\u5b83\u4f1a\u5f88\u5bb9\u6613\u3002</p>"},{"location":"zh/usage/kubeconfig/","title":"kubeconfig","text":""},{"location":"zh/usage/kubeconfig/#_1","title":"\u57fa\u672c\u7528\u6cd5","text":"<p>kubemux \u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u7ba1\u7406\u591a\u4e2a kubeconfig \u6587\u4ef6\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 <code>kubemux kube</code> \u547d\u4ee4\u6765\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u4f1a\u8bdd\uff0c\u8be5\u4f1a\u8bdd\u5c06\u4f7f\u7528\u6307\u5b9a\u7684 kubeconfig \u6587\u4ef6\u3002</p>"},{"location":"zh/usage/kubeconfig/#_2","title":"\u547d\u4ee4\u884c\u9009\u9879","text":"<ul> <li><code>--kube</code>: \u6307\u5b9a\u8981\u4f7f\u7528\u7684 kubeconfig \u6587\u4ef6</li> <li><code>--plexer</code>: \u9009\u62e9\u4f7f\u7528\u7684\u7ec8\u7aef\u590d\u7528\u5668\uff08tmux \u6216 zellij\uff09</li> </ul>"},{"location":"zh/usage/kubeconfig/#_3","title":"\u793a\u4f8b","text":"<pre><code># \u4f7f\u7528\u7279\u5b9a\u7684 kubeconfig \u6587\u4ef6\nkubemux kube --kube ~/.kube/config-dev\n\n# \u4f7f\u7528 zellij \u4f5c\u4e3a\u7ec8\u7aef\u590d\u7528\u5668\nkubemux kube --kube ~/.kube/config-dev --plexer zellij\n</code></pre>"},{"location":"zh/usage/kubeconfig/#_4","title":"\u81ea\u52a8\u8865\u5168","text":"<p>\u4e3a\u4e86\u66f4\u65b9\u4fbf\u5730\u4f7f\u7528 kubemux\uff0c\u5efa\u8bae\u542f\u7528\u547d\u4ee4\u884c\u81ea\u52a8\u8865\u5168\u529f\u80fd\u3002\u60a8\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u547d\u4ee4\u6dfb\u52a0\u5230\u60a8\u7684 shell \u914d\u7f6e\u6587\u4ef6\u4e2d\uff1a</p> <pre><code># \u5bf9\u4e8e bash \u7528\u6237\uff08\u6dfb\u52a0\u5230 ~/.bashrc\uff09\nsource &lt;(kubemux completion bash)\n\n# \u5bf9\u4e8e zsh \u7528\u6237\uff08\u6dfb\u52a0\u5230 ~/.zshrc\uff09\nsource &lt;(kubemux completion zsh)\n</code></pre>"},{"location":"zh/usage/tmuxinator/","title":"tmuxinator","text":""},{"location":"zh/usage/tmuxinator/#_1","title":"\u57fa\u672c\u7528\u6cd5","text":"<pre><code>mkdir ~/.tmuxinator\n\necho '\nname: kubemux\nroot: \"~/\"\nwindows:\n  - p1:\n    - ls\n    - pwd\n  - p2:\n    - pwd\n    - echo \"hello world\"\n  - p3: htop\n' &gt; ~/.tmuxinator/kubemux.yml\n\nkubemux -p kubemux\n</code></pre>"},{"location":"zh/usage/tmuxinator/#erb","title":"ERB \u6a21\u677f\u652f\u6301","text":"<pre><code>mkdir -pv ~/.tmuxinator\n\necho '\nname: &lt;%= @settings[\"project\"] %&gt;\nroot: ~/\n\non_project_start:\n  - export KUBECONFIG=~/.kube/config-&lt;%= @settings[\"project\"] %&gt;\n\nwindows:\n  - kubectl: ls\n  - env: echo $KUBECONFIG\n' &gt; ~/.tmuxinator/example-tpl.yml\n\nkubemux -p example-tpl --set project=hello\n</code></pre> <p>\u60a8\u53ef\u4ee5\u4f7f\u7528 <code>-p example-tpl</code> \u6765\u6307\u5b9a\u6211\u4eec\u4f7f\u7528\u7684\u6a21\u677f\u6587\u4ef6 <code>--set project=hello</code> \u8868\u793a\u6211\u4eec\u5c06\u628a <code>&lt;%= @settings[\"project\"] %&gt;</code> \u66ff\u6362\u4e3a <code>hello</code></p>"},{"location":"zh/usage/zellij/","title":"zellij \u652f\u6301","text":"<p>\u65b0\u95fb\uff1a2024-12-07 \u6211\u6dfb\u52a0\u4e86\u5bf9 zellij \u7684\u652f\u6301\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5728 zellij \u4e2d\u91cd\u7528 tmuxinator \u914d\u7f6e\u4e86\uff01</p> <p>\u8bf7\u5148\u5b89\u88c5 zellij\uff0c\u6211\u4ecd\u7136\u4f7f\u7528 <code>bin</code></p> <pre><code># \u4f7f\u7528 bin\uff1ahttps://github.com/marcosnils/bin\nbin install https://github.com/zellij-org/zellij\n   \u2022 Getting latest release for zellij-org/zellij\n\nMultiple matches found, please select one:\n\n [1] zellij-x86_64-unknown-linux-musl.sha256sum\n [2] zellij-x86_64-unknown-linux-musl.tar.gz\n Select an option: 2\n   \u2022 Starting download of https://api.github.com/repos/zellij-org/zellij/releases/assets/207566049\n12.95 MiB / 12.95 MiB [----------------------------------------] 100.00% 2.43 MiB p/s 5s\n   \u2022 Copying for zellij@v0.41.2 into /home/corvo/.local/bin/zellij\n   \u2022 Done installing zellij v0.41.2\n</code></pre> <pre><code>kubemux -h\n# --plexer string      \u6307\u5b9a\u6211\u4eec\u8981\u4f7f\u7528\u7684\u7ec8\u7aef\u590d\u7528\u5668\uff0c[tmux|zellij]\n</code></pre> <p>\u60a8\u53ef\u4ee5\u8bbe\u7f6e <code>--plexer</code> \u6765\u4f7f\u7528 zellij \u6216 tmux\u3002 \u4f46\u662f\uff0c\u5982\u679c\u60a8\u4e0d\u8bbe\u7f6e\u5b83\uff0c<code>kubemux</code> \u4f1a\u68c0\u6d4b\u662f\u5426\u53ef\u4ee5\u4f7f\u7528 zellij \u4f5c\u4e3a\u9ed8\u8ba4\u7684\u7ec8\u7aef\u590d\u7528\u5668\u3002 </p>"}]}